{"version":3,"sources":["components/Header/Header.jsx","components/Logo/Logo.jsx","components/Button/Button.jsx","components/Search/Search.jsx","assets/images/ilustra_header.svg","components/SearchInput/SearchInput.jsx","components/Gif/Gif.jsx","components/Result/Result.jsx","components/SearchList/SearchList.jsx","utils/request.js","App.jsx","index.js"],"names":["Header","children","className","Logo","logoMode","Button","onClick","disabled","type","Search","SearchInput","mode","value","setValue","src","searchImg","alt","placeholder","onChange","e","target","Gif","link","href","Result","data","isLoading","length","map","item","id","url","images","fixed_height","SearchList","isVisible","itemClick","autoComplete","name","request","resource","query","limit","fetch","App","useState","isDark","setIsDark","setIsLoading","gifsList","setGifsList","setIsVisible","isSearching","setIsSearching","setAutoComplete","useEffect","then","res","json","catch","err","console","log","finally","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bc22980.chunk.js","sourcesContent":["/**\n * Styles\n */\nimport './Header.css'\n\nconst Header = ({children}) => {\n    return (\n        <div className='header'>\n            {children}\n        </div>\n    )\n}\n\nexport default Header\n","import './Logo.css'\n\nconst Logo = ({logoMode}) => {\n    return (\n        <div className={`logo ${logoMode}`}>\n            \n        </div>\n    )\n}\n\nexport default Logo\n","\n/**\n * Styles\n */\nimport './Button.css'\n\nconst Button = ({\n        className = '',\n        onClick,\n        children,\n        disabled=false\n    }) => {\n        return (\n            <button\n                type='button'\n                className={`btn ${className ? `${className}`: ''}`}\n                onClick={onClick}\n                disabled={disabled}\n            >\n                {children}\n            </button>\n        )\n}\n\nexport default Button\n","/**\n * Styles\n */\nimport './Search.css'\n\nconst Search = ({children}) => {\n    return (\n        <div className='search'>\n            {children}\n        </div>\n    )\n}\n\nexport default Search","export default __webpack_public_path__ + \"static/media/ilustra_header.9d4669b1.svg\";","/**\n * Styles\n */\nimport './SearchInput.css'\n\nimport searchImg from '../../assets/images/ilustra_header.svg'\nimport Button from '../Button/Button'\n\nconst SearchInput = ({\n    mode,\n    value,\n    setValue,\n    onClick, \n    children,\n    disabled\n}) => {\n    return (\n        <div className='search__input'>\n            <img src={searchImg} alt=\"Imagen de inicio\" />\n            <div className=\"search__input--container\">\n                <input \n                    className={mode ? \"input--dark\" : \"\"}\n                    type=\"text\"\n                    placeholder=\"Busca gifs\"\n                    value={value}\n                    onChange={(e)=>setValue(e.target.value)}\n                />\n                <Button\n                    type='button'\n                    onClick={onClick}\n                    disabled={disabled}\n                >\n                    <span className='icon'></span>\n                </Button>                \n                {children}\n            </div>\n        </div>\n    )\n}\n\nexport default SearchInput\n","/**\n * Styles\n */\nimport './Gif.css'\n\nconst Gif = ({\n    src,\n    link\n}) => {\n    return (\n        <>\n            <a \n                href={link} \n                className=\"gif__link\"\n                target=\"_blank\"\n            >\n                <img \n                    src={src} \n                    className=\"gif__image\"                   \n                />            \n            </a>\n        </>\n    )\n}\n\nexport default Gif\n","/**\n * Styles\n */\nimport './Result.css'\n\n\nimport Gif from '../Gif/Gif'\n\nconst Result = ({\n    mode,\n    data,\n    isLoading\n}) => {\n    return (\n        <div className='result'>      \n            <h2 \n                className = {mode ? \"subtitle--dark\" : \"subtitle--light\"}\n            >\n                {isLoading ? 'Cargando....':'Resultados de la b√∫squeda'}\n            </h2>            \n            <div \n                className={`gif__container ${mode ? \"gif__container--dark\" : \"gif__container--light\"}`}\n            >\n                {!data.length?\n                    <h2>No se encontraron resultados!</h2>:\n                    (data || []).map(item => {\n                        const { id, url:link, images:{\n                            fixed_height:{\n                                url\n                            }\n                        }} = item;\n                        return (\n                            <Gif \n                                key={id}\n                                src={url}\n                                link={link} \n                            />\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Result","import React from 'react'\r\nimport './SearchList.css'\r\n\r\nconst SearchList = ({\r\n    isVisible=false,\r\n    itemClick,\r\n    autoComplete    \r\n}) => {    \r\n    return (\r\n        <div className={isVisible ? \"search__list visible\" : \"search__list\"}>\r\n            {(autoComplete || []).map(item =>{\r\n                return (\r\n                <div \r\n                    className=\"search__list-item\" \r\n                    key={item.name}\r\n                    onClick={()=>{\r\n                        itemClick(item.name);\r\n                    }}\r\n                >\r\n                    <span className=\"search__list-icon\"></span>\r\n                    {item.name}\r\n                </div>)\r\n            })}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchList\r\n","export const request = (resource,query,limit=24) => fetch(`https://api.giphy.com/v1/gifs${resource}?api_key=i6WoSbql0ll5RIC17P243kBWemkCeCIu&q=${query}&limit=${limit}&offset=0&rating=g&lang=en`);","/**\n * Dependencies\n */\nimport React, {useState, useEffect} from 'react'\n\n/**\n * Components\n */\nimport Header from './components/Header/Header'\nimport Logo from './components/Logo/Logo'\nimport Button from './components/Button/Button'\nimport Search from './components/Search/Search'\nimport SearchInput from './components/SearchInput/SearchInput'\nimport Result from './components/Result/Result'\nimport SearchList from './components/SearchList/SearchList'\nimport { request } from './utils/request'\n\n/**\n * Styles\n */\nimport './App.css';\n\nfunction App() {\n  const [isDark, setIsDark] = useState(false);\n  const [value,setValue] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [gifsList, setGifsList] = useState([]);\n  const [isVisible,setIsVisible] = useState(false);\n  const [isSearching,setIsSearching] = useState(false);\n  const [autoComplete,setAutoComplete] = useState([]);\n\n  useEffect(()=>{\n    request(\"/trending\",\"\",15)\n      .then(res => res.json())\n      .then(data => setGifsList(data.data))\n      .catch(err => console.log(err))\n      .finally(()=>{\n        setIsSearching(false);\n        setIsLoading(false);\n        setValue(\"\");\n    })\n  },[]);\n\n  useEffect(()=>{\n    if(value !== \"\"){\n      setIsVisible(true);\n    }else{\n      setIsVisible(false);  \n    }\n  },[value]);\n\n  useEffect(()=>{\n    if(isSearching && value !== \"\"){\n      setIsLoading(true);\n      request(\"/search\",value)\n      .then(res => res.json())\n      .then(data => setGifsList(data.data))\n      .catch(err => console.log(err))\n      .finally(()=>{\n        setIsSearching(false);\n        setIsLoading(false);\n        setValue(\"\");\n      })\n    }\n  },[isSearching,value]);\n\n  useEffect(()=>{\n    if(value !== \"\"){\n      request(\"/search/tags\",value,5)\n      .then(res => res.json())\n      .then(data => setAutoComplete(data.data))\n      .catch(err => console.log(err))\n    }\n  },[value]);\n\n  return (\n    <div \n      className={`app ${isDark ? \"app--dark\" : \"app--light\"}`}\n    >\n      <div className=\"container\">\n        {/* Header */}\n        <Header>\n          <Logo\n            logoMode={isDark ? \"logo--dark\" : \"logo--light\"}\n          />\n          <Button\n            className = {isDark ? \"btn--dark\" : \"btn--light\"}\n            onClick = {()=>{setIsDark(!isDark)}}  \n          >\n            MODO\n            {isDark ? \" LIGHT\" : \" DARK\"}\n          </Button>\n        </Header>\n\n        {/* Search */}\n        <Search \n          className='search'\n        >\n          <h1 \n            className={`search__title ${isDark ? \"search__title--dark\" : \"search__title--light\"}`}\n          >¬°Inspirate y busca los mejores <b>GIFS!</b>\n          </h1>\n          <SearchInput\n            mode={isDark}\n            value={value}\n            setValue={setValue}\n            onClick={()=>setIsSearching(!isSearching)}\n            disabled={isSearching || value===\"\"}\n          >\n            <SearchList\n              isVisible={isVisible}\n              autoComplete={autoComplete}\n              itemClick={(value)=>{\n                setValue(value);\n                setIsSearching(!isSearching);\n              }}\n            >            \n            </SearchList>\n          </SearchInput>\n        </Search>\n\n        {/* Result */}\n        <Result\n          data={gifsList}\n          mode={isDark}\n          isLoading={isLoading}\n        >\n        </Result>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}